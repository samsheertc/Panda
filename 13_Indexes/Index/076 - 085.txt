-------------------------------------------------------------------------------------------------
idx = pd.date_range('2023-06-01', periods=3, freq='D')
where = pd.DatetimeIndex(['2023-05-30 00:12:00', '2023-06-01 00:00:00','2023-06-02 23:59:59'])
mask = np.ones(3, dtype=bool)
idx.asof_locs(where, mask)
-------------------------------------------------------------------------------------------------
idx1 = pd.Index(['c', 'a', 'b'])
idx2 = pd.Index(['a', 'b', 'x'])
idx1.get_indexer(idx2,method='pad/ffill/backfill/bfill/nearest')
-------------------------------------------------------------------------------------------------
idx1 = pd.Index(list('samsheer'))
idx2 = pd.Index(['s','h', 'e'])
idx1.get_indexer_for(idx2)
-------------------------------------------------------------------------------------------------
idx1 = pd.Index(['c', 'b', 'a', 'b', 'b'])
idx2 = pd.Index(['b', 'b'])
idx1.get_indexer_non_unique(idx2)
-------------------------------------------------------------------------------------------------
mul_idx =  pd.MultiIndex.from_product( [(0, 1, 2), ('green', 'purple')] , names=['number', 'color'])
mul_idx.get_level_values(0)
mul_idx.get_level_values(1)
-------------------------------------------------------------------------------------------------
idx1 = pd.Index(list('abbc'))
idx1 = pd.Index(list('samsheer'))
idx1.get_loc('s')
-------------------------------------------------------------------------------------------------
idx1 = pd.Index([1,2,3])
idx2 = pd.Index([4,5,3])
idx1.isin(idx2)
-------------------------------------------------------------------------------------------------
idx = pd.MultiIndex.from_arrays([list('abcd'), list('efgh')])
idx.slice_indexer(start='b', end=('c', 'g'))
-------------------------------------------------------------------------------------------------
idx = pd.Index(list('abcdefgh'))
idx.slice_locs(start='b', end='g', step=2)
-------------------------------------------------------------------------------------------------
